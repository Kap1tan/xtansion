"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –±–æ—Ç–∞ –∫–ª—É–±–∞ X10.
"""
import logging
from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from database import Database
from config import Config
from keyboards import referral_kb, main_menu_kb
from utils import generate_ref_link, get_user_name

router = Router()
logger = logging.getLogger(__name__)


@router.callback_query(F.data == "my_referrals")
async def callback_my_referrals(callback: CallbackQuery, bot: Bot, db: Database, config: Config):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã"
    """
    user_id = callback.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    referrals = await db.get_user_referrals(user_id)
    referrals_count = len(referrals)

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = await db.get_user(user_id)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot_info = await bot.get_me()
    ref_link = generate_ref_link(bot_info.username, user_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if referrals_count > 0:
        referral_text = f"–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ {referrals_count} {'—á–µ–ª–æ–≤–µ–∫–∞' if 1 < referrals_count < 5 else '—á–µ–ª–æ–≤–µ–∫'}:\n\n"
        for i, ref in enumerate(referrals, 1):
            ref_name = ref.get('first_name', '') or ref.get('username', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            referral_text += f"{i}. {ref_name}\n"

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ–Ω—É—Å–∞—Ö
        referral_text += "\n–ë–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π:\n"
        referral_text += f"üéØ 1 –¥—Ä—É–≥ ‚Äì {config.referral.points_per_referral} –±–∞–ª–ª–æ–≤ (1 –±–∞–ª–ª = 1 —Ä—É–±–ª—å)\n"
        referral_text += f"üéØ 3 –¥—Ä—É–≥–∞ ‚Äì –¥–æ—Å—Ç—É–ø –∫ VIP –ø—Ä–æ–¥—É–∫—Ç—É —ç–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –í—å–µ—Ç–Ω–∞–º—É\n"
        referral_text += f"üéØ 5 –¥—Ä—É–∑–µ–π ‚Äì –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —á–ª–µ–Ω—Å—Ç–≤–∞ –≤ –ö–ª—É–±–µ –•10\n"
        referral_text += f"üéØ 10 –¥—Ä—É–∑–µ–π ‚Äì –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–µ–º –ö–ª—É–±–∞ –•10\n\n"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        next_level = 3 if referrals_count < 3 else 5 if referrals_count < 5 else 10 if referrals_count < 10 else None
        if next_level:
            referral_text += f"üèÜ –í–∞—à —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {referrals_count}/{next_level}\n"
            referral_text += f"–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å: {next_level - referrals_count}\n\n"
        else:
            referral_text += f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ!\n\n"

        referral_text += f"üöÄ –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: {ref_link}"
    else:
        referral_text = (
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.\n\n"
            "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø—Ä–∏–≤–µ–¥–µ—Ç–µ –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ, "
            f"–≤—ã –ø–æ–ª—É—á–∏—Ç–µ {config.referral.points_per_referral} –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ —Ä–∞–≤–Ω—ã—Ö "
            f"{config.referral.points_per_referral} —Ä—É–±–ª—è–º.\n\n"
            "–ò—Ö –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–∫–∏–¥–∫–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è/–∞–±–æ–Ω–µ–º–µ–Ω—Ç —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –ö–ª—É–±–∞ –•10\n\n"
            f"–í–∞—à–∞ —Å—Å—ã–ª–∫–∞: {ref_link}\n\n"
            "üîç –ö–∞–∫ –¥–µ–ª–∏—Ç—å—Å—è?\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –¥—Ä—É–∑—å—è–º –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö."
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        referral_text,
        reply_markup=referral_kb(ref_link)
    )
    await callback.answer()


@router.callback_query(F.data == "get_ref_link")
async def callback_get_ref_link(callback: CallbackQuery, bot: Bot, db: Database):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"
    """
    user_id = callback.from_user.id

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot_info = await bot.get_me()
    ref_link = generate_ref_link(bot_info.username, user_id)

    await callback.message.edit_text(
        f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {ref_link}\n\n"
        "üîç –ö–∞–∫ –¥–µ–ª–∏—Ç—å—Å—è?\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –¥—Ä—É–∑—å—è–º –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö.\n"
        "–ù–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!",
        reply_markup=main_menu_kb()
    )
    await callback.answer()


@router.callback_query(F.data == "generate_ref_link")
async def callback_generate_ref_link(callback: CallbackQuery, bot: Bot, db: Database):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É"
    """
    user_id = callback.from_user.id

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot_info = await bot.get_me()
    ref_link = generate_ref_link(bot_info.username, user_id)

    await callback.message.edit_text(
        f"–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞: {ref_link}\n\n"
        "üîç –ö–∞–∫ –¥–µ–ª–∏—Ç—å—Å—è?\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –¥—Ä—É–∑—å—è–º –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö.\n"
        "–ù–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!",
        reply_markup=main_menu_kb()
    )
    await callback.answer()


@router.callback_query(F.data == "about_vip")
async def callback_about_vip(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å –æ VIP –ø—Ä–æ–¥—É–∫—Ç–µ"
    """
    await callback.message.edit_text(
        "VIP –ø—Ä–æ–¥—É–∫—Ç - –≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –í—å–µ—Ç–Ω–∞–º—É üå¥\n\n"
        "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –æ–Ω–ª–∞–π–Ω-—ç–∫—Å–∫—É—Ä—Å–∏—è –ø–æ —Å–∞–º—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –º–µ—Å—Ç–∞–º –í—å–µ—Ç–Ω–∞–º–∞ —Å –Ω–∞—à–∏–º —ç–∫—Å–ø–µ—Ä—Ç–æ–º.\n\n"
        "–í—ã —É–∑–Ω–∞–µ—Ç–µ:\n"
        "- –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –æ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –ø–∏—à—É—Ç –≤ –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è—Ö\n"
        "- –ö–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –≤–æ –í—å–µ—Ç–Ω–∞–º\n"
        "- –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –º–µ—Å—Ç–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π\n\n"
        "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2 —á–∞—Å–∞\n"
        "–§–æ—Ä–º–∞—Ç: –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ Zoom\n",
        reply_markup=main_menu_kb()
    )
    await callback.answer()


@router.callback_query(F.data == "about_club")
async def callback_about_club(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ë–æ–ª—å—à–µ –æ –ö–ª—É–±–µ –•10"
    """
    await callback.message.edit_text(
        "–ö–ª—É–± –•10 - —ç—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, —Å—Ç—Ä–µ–º—è—â–∏—Ö—Å—è –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –∏ —Ä–æ—Å—Ç—É.\n\n"
        "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —á–ª–µ–Ω—Å—Ç–≤–∞ –≤ –∫–ª—É–±–µ:\n"
        "- –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏\n"
        "- –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –≤–µ–±–∏–Ω–∞—Ä—ã –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã\n"
        "- –£—á–∞—Å—Ç–∏–µ –≤ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞—Ö –∏ –≤–æ—Ä–∫—à–æ–ø–∞—Ö\n"
        "- –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –ª—é–¥—å–º–∏\n\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: 1000 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü",
        reply_markup=main_menu_kb()
    )
    await callback.answer()


@router.callback_query(F.data == "about_founder")
async def callback_about_founder(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–± –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–µ"
    """
    await callback.message.edit_text(
        "–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –ö–ª—É–±–∞ –•10 - –ê–Ω–∞—Ç–æ–ª–∏–π\n\n"
        "–≠–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 10 –ª–µ—Ç.\n"
        "–ê–≤—Ç–æ—Ä –º–µ—Ç–æ–¥–∏–∫–∏ ¬´–•10¬ª, –ø–æ–∑–≤–æ–ª—è—é—â–µ–π –≤ 10 —Ä–∞–∑ —É–≤–µ–ª–∏—á–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è.\n\n"
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–µ–º - —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å:\n"
        "- –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è\n"
        "- –†–µ—à–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º —ç–∫—Å–ø–µ—Ä—Ç–∞\n"
        "- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π",
        reply_markup=main_menu_kb()
    )
    await callback.answer()


@router.callback_query(F.data == "get_vip_access")
async def callback_get_vip_access(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø" (–∫ VIP –ø—Ä–æ–¥—É–∫—Ç—É)
    """
    await callback.message.edit_text(
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ VIP –ø—Ä–æ–¥—É–∫—Ç—É '–≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –í—å–µ—Ç–Ω–∞–º—É', "
        "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.\n\n"
        "–û–Ω —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –≤–∞–º –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.",
        reply_markup=need_help_kb()
    )
    await callback.answer()


@router.callback_query(F.data == "get_consultation")
async def callback_get_consultation(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
    """
    await callback.message.edit_text(
        "–î–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–µ–º –ö–ª—É–±–∞ –•10, "
        "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.\n\n"
        "–û–Ω –ø–æ–º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
        reply_markup=need_help_kb()
    )
    await callback.answer()


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Ü–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
from keyboards import need_help_kb